name: 'CI/CD pipeline for project'
on:
  push: 
    branches:
      - main
  pull_request:


jobs: 
  # 1. devops job
  terraform:
    name: 'Terraform Infrastructure'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: devops
    
    steps:
    # step 1: checkout the repository to the github action runner
    - name: Checkout Repository
      uses: actions/checkout@v4

    # Step 2: configure credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    # step 3: Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Teraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: latest

    # step 4: Init
    - name: Terraform Init
      run: terraform init

    # step 5: validate
    - name: Terraform Validate
      run: terraform validate

    # step 6: Plan
    - name: Terraform Plan
      run: terraform plan

    # step 7: Check if S3 exists
    - name: Check S3 bucket
      run: |
        if aws s3 ls "s3://your-bucket-name" 2>&1 | grep -q 'NoSuchBucket'; then
          echo "Bucket does not exist, proceeding with Terraform apply."
          terraform apply -auto-approve
        else
          echo "Bucket already exists, skipping Terraform apply."
        fi

    # step 7: Apply
    - name: Terraform Apply
      run: terraform apply -auto-approve

  # 2. fe job
  frontend_react:
    name: 'Frontend CI/CD'
    needs: terraform
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: frontend
    
    steps:
    # step 1: checkout repository
    - name: Checkout Repository
      uses: actions/checkout@v4

    # step 2: Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
    
    # step 3: Install dependencies
    - name: Install dependencies
      run: npm install

    # # step 4: Lint Code
    # - name: Check Lint Code
    #   run: npm run lint
    
    # step 4: Build project
    - name: Build React project
      run: npm run build

    # Step 5: Check if build exists
    - name: Check if build exists
      run: ls -la frontend/build || echo "Build folder not found!"  # ✅ Kiểm tra build có tồn tại không

    # step 6: Upload Build Artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with: 
        name: frontend-build
        path: build

    # step 7: Deploy build lên S3
    - name: Deploy build to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        if [ -d "build" ]; then
          aws s3 sync build s3://terraform-s3-bucket-building --delete
        else
          echo "Build folder does not exist, skipping deployment"
          exit 1
        fi
  
